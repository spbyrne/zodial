.site {
  &__content {
    padding: 1rem;
  }
  &__wrapper {
    position: relative;
    flex: 1 0 auto;
    &:before {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: 50%;
      width: 100%;
      height: 8rem;
      transform: translate3d(-50%, 0%, 0);
      opacity: 1;
      background-image: radial-gradient(ellipse farthest-side, rgba($color-accent, 0.12), rgba($color-accent, 0.07), rgba($color-accent, 0.03), rgba($color-accent, 0));
      background-position: bottom center;
      background-size: 100% 200%;
      transition: all $time-long $easing;
      pointer-events: none;
    }
  }
  &__footer {
    padding-top: 0.5rem;
    flex-shrink: 0;
  }
  &__title {
    font-size: 0.9rem;
    text-transform: uppercase;
    color: $color-light;
    margin: 0;
    a {
      text-decoration: none;
      color: inherit;
    }
  }
}

.loading-indicator {
  position: absolute;
  bottom: 0;
  left: 0;
  &:before {
    content: 'Loading ' attr(data-loading) '...';
    white-space: nowrap;
    position: absolute;
    left: 0;
    bottom: -1.75rem;
    transform: translate3d( -2rem, 100%, 0);
    opacity: 0;
    pointer-events: none;
    transition: all $time-long $easing;
    transition-delay: 0s;
    .is-loading & {
      transition-delay: 0.35s;
      opacity: 1;
      transform: translate3d( 0, 100%, 0);
    }
    @include for-small {
      bottom: -1rem;
    }
  }
}

.header-bar {
  position: relative;
  z-index: 50;
  [data-location="home"] & {
    &:after {
      transform: scale3d(0.2, 1, 1);
    }
  }
  &:after {
    display: none;
    @include for-small {
      content: '';
      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      opacity: 1;
      height: 2px;
      background-color: $color-grey;
      transition: all $time $easing;
      transform-origin: 0 50%;
      transform: scale3d(1, 1, 1);
      z-index: -1;
    }
  }
  &:before {
    @include for-small {
      content: '';
      display: block;
      position: absolute;
      bottom: 0;
      left: 50%;
      width: 100%;
      height: 4rem;
      transform: translate3d(-50%, 100%, 0);
      opacity: 1;
      background-image: radial-gradient(ellipse farthest-side, rgba($color-accent, 0.12), rgba($color-accent, 0.07), rgba($color-accent, 0.03), rgba($color-accent, 0));
      background-position: bottom center;
      background-size: 100% 200%;
      transition: all $time-long $easing;
      pointer-events: none;
      [data-location="home"] & {
        opacity: 0;
      }
    }
  }
  &__title {
    color: $color-accent;
    line-height: 1;
    white-space: nowrap;
    font-size: 1rem;
    letter-spacing: 0.5px;
    transition: all $time $easing;
    padding: 0.75rem 0 0 0;
    margin-bottom: -0.25rem;
    [data-location="home"] & {
      pointer-events: none;
      transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
    }
    @include for-small {
      position: absolute;
      top: 50%;
      left: -1rem;
      padding: 0;
      margin: 0;
      transform: translate3d(-100%, -50%, 0) scale3d(0.8, 0.8, 1);
      [data-location="home"] & {
        transform: translate3d(-0.5rem, -50%, 0) scale3d(1, 1, 1);
      }
    }
    a {
      display: block;
      position: relative;
      transform: translate3d(0, 0, 0);
      transition: transform $time $easing, opacity $time-fast $easing;
      opacity: 0.7;
      &:hover {
        opacity: 1;
      }
      &:after {
        content: attr(title);
        position: absolute;
        color: $color-accent;
        top: 0;
        left: 0;
        filter: blur(0.8rem);
        opacity: 0;
        z-index: -1;
        transition: all $time $easing;
        [data-location="home"] & {
          opacity: 0.4;
        }
      }
      @include for-small {
        [data-location="home"] & {
          transform: translate3d(1.5rem, 0, 0);
          opacity: 1;
        }
      }
    }
  }
  &__nav {
    position: absolute;
    right: 0;
    transform: translate3d(0, 0, 0);
    opacity: 1;
    transition: all $time $easing;
    [data-location="home"] & {
      pointer-events: none;
      transform: translate3d(2rem, 0, 0);
      opacity: 0;
    }
  }
}

.main-nav {
  display: none;
  @include for-small {
    display: flex;
  }
  position: relative;
  transition: all $time $easing;
  flex-wrap: nowrap;
  align-items: center;
  flex-direction: row;
  justify-content: flex-start;
  &__item {
    position: relative;
    display: inline-block;
    margin-right: 1rem;
  }
  &__link,
  a.main-nav__link {
    position: relative;
    display: block;
    line-height: 1;
    transition: all $time $easing;
    color: $color-primary;
    font-weight: 700;
    font-size: 0.85rem;
    text-decoration: none;
    opacity: 0.7;
    letter-spacing: 0.5px;
    padding: 1rem 0;
    text-align: center;
    user-select: none;
    &:before {
      content: '';
      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: $color-gold;
      opacity: 1;
      transform-origin: 0 50%;
      transform: scale3d(0, 1, 1);
    }
    &:hover {
      color: $color-active;
      opacity: 1;
    }
    &:active {
      color: $color-active;
      opacity: 1;
    }
    &.active {
      pointer-events: none;
      opacity: 1;
      position: relative;
      color: $color-primary;
      &:before {
        transform: scale3d(1, 1, 1);
      }
    }
    &.was-active {
      animation-name: mainNavLinkWasActive;
      animation-duration: $time;
      animation-timing-function: $easing;
      animation-fill-mode: both;
      &:before {
        animation-name: mainNavLinkBeforeWasActive;
        animation-duration: $time;
        animation-timing-function: $easing;
        animation-fill-mode: both;
      }
    }
    &.loading {
      color: $color-active;
      opacity: 1;
      pointer-events: none;
      animation-name: mainNavLinkLoading;
      animation-duration: $time;
      animation-timing-function: $easing;
      animation-fill-mode: forwards;
      &:before {
        animation-name: mainNavLinkBeforeLoading;
        animation-duration: $time;
        animation-timing-function: $easing;
        animation-fill-mode: forwards;
      }
    }
  }
}

.container {
  padding: 0 1rem 0 1rem;
  margin: 0 auto;
  max-width: 44rem;
  position: relative;
  @include for-small {
    padding-left: 8rem;
  }
  &.site__content {
    padding: 1rem;
    @include for-small {
      padding-left: 8rem;
    }
  }
}

.animate {
  position: relative;
  animation-name: animateIn;
  animation-duration: $time-long;
  animation-timing-function: $easing;
  animation-fill-mode: both;
  &--second {
    animation-delay: .04s;
  }
  &--third {
    animation-delay: .08s;
  }
  &--fourth {
    animation-delay: .12s;
  }
  &--cascade-children {
    >* {
      position: relative;
      animation-name: slideUpIn;
      animation-iteration-count: 1;
      animation-timing-function: $easing;
      animation-fill-mode: both;
      transition: all $time $easing;
      @for $i from 0 through 12 {
        &:nth-child(#{$i + 1}) {
          animation-delay: $i * 0.04s;
          animation-duration: 0.35s - ($i * 0.015s);
        }
      }
    }
  }
  .is-exiting & {
    animation-name: animateOut;
    animation-duration: $time;
    animation-timing-function: $easing-in;
    animation-fill-mode: both;
    animation-delay: 0s;
  }
}

.info {
  display: flex;
  justify-content: flex-start;
  flex-direction: row;
  flex-wrap: wrap;
  &__item {
    position: relative;
    flex: 1 1 30%;
    padding: 0 1rem 0.5rem 0;
    &--wide {
      flex-basis: 100%;
      .info__data {
        white-space: normal;
      }
    }
  }
  &__label {
    font-weight: 700;
    line-height: 1;
    font-size: 0.9rem;
    text-transform: uppercase;
    opacity: 1;
    display: block;
    color: $color-primary;
    white-space: nowrap;
    margin-bottom: 0.125rem;
  }
  &__meta {
    color: $color-accent;
    font-weight: 500;
    .info__label & {
      float: right;
    }
    @include for-small() {
      .info__label & {
        margin-left: 0.5rem;
        display: inline-block;
        float: none;
        &:before {
          content: 'â€“';
          display: inline-block;
          margin-right: 0.3rem;
        }
      }
    }
  }
  &__data {
    display: block;
    font-size: 1.1rem;
    line-height: 1.2;
    white-space: nowrap;
    font-family: $font-accent;
    font-weight: $font-accent--weight;
  }
}

.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 400vw;
  height: 100vh;
  z-index: -1;
  transition: transform 1s cubic-bezier(0.375, 0.005, 0.070, 1.000);
  background-color: $color-dark;
  background-size: 100% 100%;
  background-position: bottom;
  background-repeat: repeat-x;
  opacity: 1;
  $max: length($pages);
  $max-transform: -300vw;
  @for $index from 0 to $max {
    $page: nth($pages, $index + 1);
    body[data-location='#{$page}'] & {
      transform: translate3d(($max-transform / $max) * $index, 0, 0);
    }
  }
}

.wheel {
  position: absolute;
  top: 0;
  left: 0;
  transform-origin: 50% 50%;
  transform: translate3d( 0, 0, 0);
  width: 100%;
  height: 100%;
  opacity: 0.5;
  pointer-events: none;
  transition: all $time-long $easing-in-out;
  overflow: hidden;
  z-index: -1;
  &__image {
    display: block;
    width: 120%;
    left: -10%;
    top: 15%;
    height: auto;
    margin: 0;
    opacity: 0.1;
    transform-origin: 50% 50%;
    position: relative;
    transition: all $time-long $easing-in-out;
    animation-name: spin;
    animation-duration: 220s;
    animation-fill-mode: both;
    animation-iteration-count: infinite;
  }
}

.breadcrumb {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  flex-direction: row;
  justify-content: flex-start;
  margin-bottom: 0.65rem;
  position: relative;
  z-index: 300;
  @include for-small {
    display: none;
  }
  [data-location="home"] & {
    &.is-exiting {
      animation-name: breadcrumbOut;
      animation-duration: $time;
      animation-timing-function: $easing-in;
      animation-fill-mode: both;
    }
  }
  &__item {
    position: relative;
    display: inline-block;
    &:last-child {
      .is-exiting.new-location & {
        animation-name: breadcrumbOut;
        animation-duration: $time;
        animation-timing-function: $easing-in;
        animation-fill-mode: both;
      }
      .new-location:not(.is-exiting) & {
        animation-name: breadcrumbIn;
        animation-duration: $time;
        animation-timing-function: $easing;
        animation-fill-mode: both;
      }
    }
    &:not(:last-child) {
      margin-right: 0.5rem;
      padding-right: 0.5rem;
      &:after {
        font-size: 0.8rem;
        line-height: 1;
        content: '/';
        position: absolute;
        text-align: center;
        right: 0;
        top: 0;
        display: inline-block;
        color: $color-light;
        opacity: 0.3;
        transform: translate3d(0.15rem, -0.075rem, 0);
      }
    }
  }
  &__link {
    line-height: 1;
    font-size: 0.6rem;
    font-weight: 600;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 0.5px;
    opacity: 0.8;
    display: block;
    color: $color-primary;
    &:hover {
      opacity: 1;
    }
    &.active {
      color: $color-primary;
      text-decoration: none;
      font-weight: bold;
      pointer-events: none;
    }
  }
}

.button-list {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  box-pack: center;
  align-items: flex-start;
  box-orient: vertical;
  box-direction: normal;
  position: relative;
  &__item {
    position: relative;
    flex: 0 1 auto;
    width: 100%;
    padding: 0.25rem 1rem;
    background-color: $color-primary;
    margin-bottom: 2px;
    transition: all 0.1s $easing;
    &:first-child {
      border-radius: $border-radius $border-radius 0 0;
    }
    &:last-child {
      border-radius: 0 0 $border-radius $border-radius;
    }
    &:hover {
      opacity: 0.9;
    }
  }
  &__link,
  a.button-list__link {
    text-decoration: none;
    color: $color-light;
    font-weight: 600;
  }
}

.sentence-list {
  &__item {
    display: inline-block;
    &:not(:last-child) {
      &:after {
        content: ',';
        margin-right: 0.3em;
      }
    }
    &:last-child {
      &:before {
        content: 'and\0020';
      }
      &:first-child {
        &:before {
          content: '';
          display: none;
        }
      }
    }
  }
}

.page-header {
  &__title {
    line-height: 1;
    font-size: 2.6rem;
    color: $color-light;
    font-family: $font-accent;
    font-weight: $font-accent--weight;
  }
}

.page-nav {
  position: absolute;
  top: 1rem;
  padding-right: 2rem;
  transition: all $time $easing;
  &__item {
    position: relative;
    display: block;
    margin-left: -1.5rem;
  }
  &__link,
  a.page-nav__Link {
    position: relative;
    display: inline-block;
    line-height: 1.5;
    font-size: 1.1rem;
    transition: transform $time-long $easing, color $time $easing, text-decoration-color $time $easing;
    transform: translate3d(-100%, 0, 0);
    transition: all $time $easing;
    color: $color-primary;
    opacity: 0.8;
    user-select: none;
    @include for-small() {
      font-size: 1rem;
      line-height: 1;
    }
    &:hover {
      opacity: 1;
    }
    &.loading {
      pointer-events: none;
      animation-name: pageNavLinkLoading;
      animation-duration: $time;
      animation-timing-function: $easing-in;
      animation-fill-mode: forwards;
    }
    &.active {
      color: $color-light;
      text-decoration-color: transparent;
      font-weight: bold;
      pointer-events: none;
      opacity: 1;
      animation-name: pageNavLinkActive;
      animation-duration: $time;
      animation-timing-function: $easing;
      animation-fill-mode: backwards;
    }
  }
  &__title {
    font-family: $font-accent;
    font-weight: $font-accent--weight;
    font-size: 1.3rem;
    opacity: 1;
  }
  &__description {
    display: block;
    padding-left: 1.5rem;
    font-size: 0.75rem;
    line-height: 1.4;
    margin-bottom: 0.5rem;
  }
  &--details {
    .new-location & {
      .page-nav__item {
        animation-name: animateIn;
        animation-iteration-count: 1;
        animation-timing-function: $easing;
        animation-fill-mode: backwards;
        @for $i from 0 through 12 {
          &:nth-child(#{$i + 1}) {
            animation-delay: ($i - 1) * 0.0175s;
            animation-duration: 0.35s - ($i * 0.015s);
          }
        }
      }
    }
  }
  &--home {
    .page-nav__item {
      margin-bottom: 0.5rem;
    }
  }
  &--index {
    .page-nav__item {
      animation-name: slideUpIn;
      animation-iteration-count: 1;
      animation-timing-function: $easing;
      animation-fill-mode: both;
      transition: all $time $easing;
      @for $i from 0 through 12 {
        &:nth-child(#{$i + 1}) {
          animation-delay: ($i - 1) * 0.03s;
          animation-duration: 0.35s - ($i * 0.015s);
        }
      }
    }
    .page-nav__link,
    a.page-nav__Link {
      opacity: 1;
      transform: translate3d(1.5rem, 0, 0);
      .is-exiting & {
        opacity: 0.8;
        transform: translate3d(-100%, 0, 0);
      }
      &.loading {
        animation-name: pageNavLinkLoadingIndex;
        animation-fill-mode: both;
      }
    }
    &.exit {
      animation-name: slideDownOut;
      animation-iteration-count: 1;
      animation-timing-function: $easing-in;
      animation-fill-mode: both;
      animation-delay: 0;
      animation-duration: $time;
      .page-nav__item {
        animation-name: slideDownOut;
        animation-iteration-count: 1;
        animation-timing-function: $easing;
        animation-fill-mode: both;
        @for $children from 1 to $maxChildren {
          // This SCSS adjusts the animation timing based on the number of elements in the nav
          @for $i from 0 through $children {
            &:nth-child(#{$i + 1}):nth-last-child(#{$children - ($i - 1)}) {
              animation-delay: ($time * 0.75) - ($i * ($time / $children));
              animation-duration: $time * 0.75;
            }
          }
        }
      }
      .page-nav__link,
      a.page-nav__Link {
        transform: translate3d(1.5rem, 0, 0);
      }
    }
  }
  &--details {
    &.exit {
      animation-name: slideLeftOut;
      animation-iteration-count: 1;
      animation-timing-function: $easing-in;
      animation-fill-mode: both;
      animation-duration: $time;
      .page-nav__item {
        animation-name: slideLeftOut;
        animation-iteration-count: 1;
        animation-timing-function: $easing;
        animation-fill-mode: both;
        @for $children from 1 to $maxChildren {
          @for $i from 0 through $children {
            &:nth-child(#{$i + 1}):nth-last-child(#{$children - ($i - 1)}) {
              animation-delay: ($time * 0.75) - ($i * ($time / $children));
              animation-duration: $time * 0.75;
            }
          }
        }
      }
    }
  }
}

.footer {
  padding: 0.5rem 0;
  &__text {
    font-size: 0.6rem;
    opacity: 0.5;
    margin: 0;
  }
}